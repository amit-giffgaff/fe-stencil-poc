/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  ggcButton as GgcButton
} from './components/ggc-button/ggc-button';

declare global {
  interface HTMLGgcButtonElement extends GgcButton, HTMLElement {
  }
  var HTMLGgcButtonElement: {
    prototype: HTMLGgcButtonElement;
    new (): HTMLGgcButtonElement;
  };
  interface HTMLElementTagNameMap {
    "ggc-button": HTMLGgcButtonElement;
  }
  interface ElementTagNameMap {
    "ggc-button": HTMLGgcButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ggc-button": JSXElements.GgcButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface GgcButtonAttributes extends HTMLAttributes {
      large?: boolean;
      primary?: boolean;
      type?: string;
    }
  }
}


import {
  ggcCopyBox as GgcCopybox
} from './components/ggc-copybox/ggc-copybox';

declare global {
  interface HTMLGgcCopyboxElement extends GgcCopybox, HTMLElement {
  }
  var HTMLGgcCopyboxElement: {
    prototype: HTMLGgcCopyboxElement;
    new (): HTMLGgcCopyboxElement;
  };
  interface HTMLElementTagNameMap {
    "ggc-copybox": HTMLGgcCopyboxElement;
  }
  interface ElementTagNameMap {
    "ggc-copybox": HTMLGgcCopyboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ggc-copybox": JSXElements.GgcCopyboxAttributes;
    }
  }
  namespace JSXElements {
    export interface GgcCopyboxAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  ggcPageHeader as GgcPageHeader
} from './components/ggc-page-header/ggc-page-header';

declare global {
  interface HTMLGgcPageHeaderElement extends GgcPageHeader, HTMLElement {
  }
  var HTMLGgcPageHeaderElement: {
    prototype: HTMLGgcPageHeaderElement;
    new (): HTMLGgcPageHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "ggc-page-header": HTMLGgcPageHeaderElement;
  }
  interface ElementTagNameMap {
    "ggc-page-header": HTMLGgcPageHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ggc-page-header": JSXElements.GgcPageHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface GgcPageHeaderAttributes extends HTMLAttributes {
      header?: string;
      image?: string;
    }
  }
}


import {
  ggcTextBox as GgcTextbox
} from './components/ggc-textbox/ggc-textbox';

declare global {
  interface HTMLGgcTextboxElement extends GgcTextbox, HTMLElement {
  }
  var HTMLGgcTextboxElement: {
    prototype: HTMLGgcTextboxElement;
    new (): HTMLGgcTextboxElement;
  };
  interface HTMLElementTagNameMap {
    "ggc-textbox": HTMLGgcTextboxElement;
  }
  interface ElementTagNameMap {
    "ggc-textbox": HTMLGgcTextboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "ggc-textbox": JSXElements.GgcTextboxAttributes;
    }
  }
  namespace JSXElements {
    export interface GgcTextboxAttributes extends HTMLAttributes {
      label?: string;
      name?: string;
      placeholder?: string;
      value?: string;
    }
  }
}


import {
  MyComponent as MyComponent
} from './components/my-component/my-component';

declare global {
  interface HTMLMyComponentElement extends MyComponent, HTMLElement {
  }
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-component": JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      first?: string;
      last?: string;
    }
  }
}

